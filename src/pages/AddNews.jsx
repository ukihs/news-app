import { useState } from 'react';
import { supabase } from '../utils/supabaseClient';
import { useNavigate, Link } from 'react-router-dom';

export default function AddNews() {
  const [title, setTitle] = useState('');
  const [content, setContent] = useState('');
  const [imageFile, setImageFile] = useState(null);
  const [error, setError] = useState('');
  const [success, setSuccess] = useState(false);
  const navigate = useNavigate();

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô handleSubmit ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ‡∏°‡∏≤ ‡∏ß‡∏≤‡∏á‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
  const handleSubmit = async (e) => {
    e.preventDefault();
    setError('');
    setSuccess(false);

    if (!title.trim() || !content.trim() || !imageFile) {
      setError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á');
      return;
    }

    try {
      const { data: userData, error: userError } = await supabase.auth.getUser();
      const userId = userData?.user?.id;

      if (!userId || userError) {
        setError('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
        return;
      }

      const fileExt = imageFile.name.split('.').pop();
      const fileName = `${Date.now()}.${fileExt}`;
      const { data: uploadData, error: uploadError } = await supabase
        .storage
        .from('news-images')
        .upload(fileName, imageFile);

      if (uploadError) {
        console.error('‚ùå Upload error:', uploadError.message);
        setError('‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß');
        return;
      }

      const imageUrl = supabase
        .storage
        .from('news-images')
        .getPublicUrl(fileName).data.publicUrl;

      const { error: insertError } = await supabase
        .from('news')
        .insert([{ title, content, image_url: imageUrl, user_id: userId }]);

      if (insertError) {
        console.error('‚ùå Insert error:', insertError.message);
        setError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å');
      } else {
        setSuccess(true);
        setTitle('');
        setContent('');
        setImageFile(null);
        setTimeout(() => navigate('/dashboard'), 1000);
      }
    } catch (err) {
      console.error('üß® Unexpected error:', err.message);
      setError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å');
    }
  };

  return (
    <div className="min-h-screen bg-gray-100 flex justify-center items-start px-4 py-10">
      <form onSubmit={handleSubmit} className="bg-white rounded-lg shadow-lg p-8 w-full max-w-2xl">
        <Link to="/dashboard" className="text-sm text-gray-600 hover:underline block mb-3">
          ‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î
        </Link>

        <h1 className="text-2xl font-bold mb-6 flex items-center gap-2">üì∞ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πà‡∏≤‡∏ß‡πÉ‡∏´‡∏°‡πà</h1>

        {error && <p className="text-red-600 mb-4">{error}</p>}
        {success && <p className="text-green-600 mb-4">‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>}

        <label className="block mb-1 font-medium">‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Ç‡πà‡∏≤‡∏ß</label>
        <input
          type="text"
          className="w-full border p-3 rounded mb-4"
          value={title}
          onChange={(e) => setTitle(e.target.value)}
        />

        <label className="block mb-1 font-medium">‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤</label>
        <textarea
          className="w-full border p-3 rounded mb-4 h-40"
          value={content}
          onChange={(e) => setContent(e.target.value)}
        />

        <label className="block mb-1 font-medium">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</label>
        <input
          type="file"
          accept="image/*"
          className="w-full border p-2 rounded mb-6"
          onChange={(e) => setImageFile(e.target.files[0])}
        />

        <button
          type="submit"
          className="bg-blue-600 text-white py-3 px-6 rounded hover:bg-blue-700 transition"
        >
          üíæ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πà‡∏≤‡∏ß
        </button>
      </form>
    </div>
  );
}
